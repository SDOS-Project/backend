// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String        @id @default(uuid())
  firstName        String        @db.VarChar(255)
  lastName         String        @db.VarChar(255)
  email            String        @unique
  password         String
  role             UserRole
  discipline       Discipline
  areasOfInterest  String[]      @default([])
  organisationId   String?
  organisation     Organisation? @relation(fields: [organisationId], references: [id])
  createdAt        DateTime      @default(now())
  updatedAt        DateTime      @updatedAt
  projects         Project[]     @relation("ProjectUsers")
  updates          Update[]
  handle           String        @unique
  firebaseId       String        @unique
  imgUrl           String?
  socialUrl        String?
  organisationName String?
}

model Organisation {
  id         String           @id @default(uuid())
  name       String
  type       OrganisationType
  email      String           @unique
  password   String
  address    String
  imgUrl     String
  users      User[]
  projects   Project[]        @relation("ProjectOrganisations")
  ipPolicy   String
  handle     String           @unique
  firebaseId String           @unique
  createdAt  DateTime         @default(now())
  updatedAt  DateTime         @updatedAt
}

model Project {
  id            String         @id @default(uuid())
  name          String
  description   String
  status        ProjectStatus  @default(ONGOING)
  organisations Organisation[] @relation("ProjectOrganisations")
  users         User[]         @relation("ProjectUsers")
  updates       Update[]
  handle        String         @unique
  startDate     DateTime
  endDate       DateTime
  location      Location
  students      Json
  createdAt     DateTime       @default(now())
  updatedAt     DateTime       @updatedAt
}

model Update {
  id        String   @id @default(uuid())
  projectId String
  project   Project  @relation(fields: [projectId], references: [id])
  content   String
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum UserRole {
  FACULTY
  EMPLOYEE
  STUDENT
}

enum OrganisationType {
  ACADEMIC
  CORPORATE
}

enum ProjectStatus {
  ONGOING
  COMPLETED
  CANCELLED
}

enum Location {
  ONSITE
  REMOTE
  HYBRID
}

enum Discipline {
  CivilEngineering
  MechanicalEngineering
  ElectricalEngineering
  ComputerScienceAndEngineering
  AerospaceEngineering
  ChemicalEngineering
  BiomedicalEngineering
  CivilAndEnvironmentalEngineering
  MaterialsScienceAndEngineering
  AutomobileEngineering
  Mechatronics
  TextileEngineering
  OceanEngineering
}